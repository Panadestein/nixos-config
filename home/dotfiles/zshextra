#--------------------------------------------------
#                _________  _   _ 
#               |__  / ___|| | | |
#                 / /\___ \| |_| |
#                / /_ ___) |  _  |
#               /____|____/|_| |_|
#
# Additional ZSH configuration
#--------------------------------------------------

# Export environmental variables

export MANPAGER="sh -c 'col -bx | bat -l man -p'"

# My custom theme for ZSH, with a bit of LISP :)

prompt_nix_shell() {
    if [[ -n "$IN_NIX_SHELL" ]]; then
	if [[ -n $NIX_SHELL_PACKAGES ]]; then
	    local package_names=""
	    local packages=($NIX_SHELL_PACKAGES)
	    for package in $packages; do
		package_names+="${package##*.}"
	    done
	    echo -n "%B%{$fg_bold[blue]%}(%{$fg[green]%}$package_names%{$fg_bold[blue]%}%B)%{$reset_color%} "
	elif [[ -n $name ]]; then
	    local stripnam=${name#interactive-}
	    stripnam=${stripnam%-environment}
            stripnam=$(echo "$stripnam" | cut -d "-" -f 1)
	    echo -n "%B%{$fg_bold[blue]%}(%{$fg[cyan]%}$stripnam%{$fg_bold[blue]%}%B)%{$reset_color%} "
	else
	    echo -n "%B(%{$fg[blue]%}nix-shell%{$reset_color%}%B) "
	fi
    fi
}

PROMPT='$(prompt_nix_shell)'
PROMPT+="%B(%B%{$fg[blue]%}Î»%{$reset_color%} %B. %{$fg[yellow]%}%1d%{$reset_color%}%B)%{$reset_color%} "
PROMPT+='$(git_prompt_info)'

ZSH_THEME_GIT_PROMPT_PREFIX="%{$fg_bold[blue]%}(%{$fg[cyan]%}"
ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%} "
ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg[blue]%})"
ZSH_THEME_GIT_PROMPT_CLEAN="%{$fg[blue]%})"

# Update style

zstyle ':omz:update' mode reminder

# Autocompletion options

HYPHEN_INSENSITIVE="true"

# Command auto-correction and eye candy completion

ENABLE_CORRECTION="true"
COMPLETION_WAITING_DOTS="true"

# User side configuration

export MANPATH="/usr/local/man:$MANPATH"
export LANG=en_US.UTF-8

# Functions

isrun() {
    # Check if program is running
    ps -A | grep $1;
}

tpy() {
    # Create Bash, Python and Emacs session with tmux
    tmux new-session -d 'emacsclient -c'$1
    tmux new-window ''
    tmux split-window -h
    tmux split-window -v 'ipython'
    tmux -2 attach-session -d
}

ldiff() {
    if [ -z "$1" ] || [ -z "$2" ]; then return; fi
    f1=$(basename "$1")
    f2=$(basename "$2")
    cat -n "$1" > "/tmp/$f1"
    cat -n "$2" > "/tmp/$f2"
    nvim -d "/tmp/$f1" "/tmp/$f2"
    rm "/tmp/$f1" "/tmp/$f2"
}

yta() {
    # Play a YouTube video sound with MPV
    mpv --ytdl-format=bestaudio ytdl://ytsearch:"$*"
}

xpcon() {
    # Set external displayport monitor
    xrandr --output eDP --primary --auto\
	   --output DisplayPort-"$1" --left-of eDP --auto
}

cls() {
    # Who doesn't do this?
    cd "$1"; ls;
}

pathll() {
    # Print the $PATH environment variable line by line
    echo $PATH | tr : '\n'
}

nixvars() {
    # Show nix environment variables
    env |grep -i ^nix
}

recscr() {
    # Simple, silent screen record (for laptop's screen)
    ffmpeg -video_size 1920x1080 -framerate 25 -f x11grab -i :0.0 Videos/"$1"
}

pab() {
    # Terminal pastebin https://termbin.com/
    cat "$1" | nc termbin.com 9999
}
